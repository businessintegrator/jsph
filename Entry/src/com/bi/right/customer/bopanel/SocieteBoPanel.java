/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package com.bi.right.customer.bopanel;

import com.bi.right.customer.bo.Societe;
import com.bi.right.customer.panel.AbstractPanel;
import com.bi.right.customer.panel.sub.LiquidationJPanel;
import com.bi.right.customer.panel.sub.NAFAPEJPanel;
import com.bi.right.customer.panel.sub.RedressementJPanel;
import com.bi.right.customer.util.Law;
import com.bi.right.customer.util.naf.R1441_9;
import java.awt.Dialog;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.io.File;
import java.util.List;
import java.util.regex.Pattern;
import javax.swing.JFileChooser;
import javax.swing.SwingUtilities;
import javax.swing.text.Document;
import org.openide.DialogDescriptor;
import org.openide.DialogDisplayer;
import org.openide.NotifyDescriptor;

/**
 *
 * @author rafaralahitsimba tiaray
 */
public class SocieteBoPanel extends javax.swing.JPanel {

    private static final String AJOUTER = "Ajouter";
    public static final String ANNULER = "Annuler";
    public static final String OK = "Ok";
    private Dialog nafDialog;
    private Dialog redressementDialog;
    private Dialog liquidation;
    private AbstractPanel abstractPanel;
    private NAFAPEJPanel naf;
    private String section;

    /**
     * Creates new form SocieteBoPanel
     */
    public SocieteBoPanel() {
	initComponents();
    }

    public SocieteBoPanel(Societe psociete) {
	this.societe = psociete;
	initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        bindingGroup = new org.jdesktop.beansbinding.BindingGroup();

        societe = getSociete();
        buttonGroup1 = new javax.swing.ButtonGroup();
        jLabel1 = new javax.swing.JLabel();
        jTextFieldNomDefendeur = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jTextFieldNomCommDefendeur = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jTextFieldSiret = new javax.swing.JTextField();
        jTextFieldKBISS = new javax.swing.JTextField();
        jButtonLoadKBISS = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        jCheckBoxRedre = new javax.swing.JCheckBox();
        jCheckBoxLiquidation = new javax.swing.JCheckBox();
        jButtonLiquidation = new javax.swing.JButton();
        jButtonRedressement = new javax.swing.JButton();
        jCheckBoxAgs = new javax.swing.JCheckBox();
        jTextFieldAGS = new javax.swing.JTextField();
        jLabelNbSalarie = new javax.swing.JLabel();
        jTextFieldNBSalaries = new javax.swing.JFormattedTextField();
        jRadioButtonLowerThan10 = new javax.swing.JRadioButton();
        jRadioButton10to49 = new javax.swing.JRadioButton();
        jRadioButton50to499 = new javax.swing.JRadioButton();
        jRadioButtonMoreThan500 = new javax.swing.JRadioButton();
        jTextFieldApeNaf = new javax.swing.JTextField();
        jTextFieldActivity = new javax.swing.JTextField();
        jButtonNAFAPE = new javax.swing.JButton();
        jLabelAPENAF = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();

        org.openide.awt.Mnemonics.setLocalizedText(jLabel1, org.openide.util.NbBundle.getMessage(SocieteBoPanel.class, "SocieteBoPanel.jLabel1.text")); // NOI18N

        jTextFieldNomDefendeur.setToolTipText(org.openide.util.NbBundle.getMessage(SocieteBoPanel.class, "SocieteBoPanel.jTextFieldNomDefendeur.toolTipText")); // NOI18N

        org.jdesktop.beansbinding.Binding binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, societe, org.jdesktop.beansbinding.ELProperty.create("${nm}"), jTextFieldNomDefendeur, org.jdesktop.beansbinding.BeanProperty.create("text"));
        bindingGroup.addBinding(binding);

        org.openide.awt.Mnemonics.setLocalizedText(jLabel2, org.openide.util.NbBundle.getMessage(SocieteBoPanel.class, "SocieteBoPanel.jLabel2.text")); // NOI18N

        jTextFieldNomCommDefendeur.setToolTipText(org.openide.util.NbBundle.getMessage(SocieteBoPanel.class, "SocieteBoPanel.jTextFieldNomCommDefendeur.toolTipText")); // NOI18N

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, societe, org.jdesktop.beansbinding.ELProperty.create("${nmcom}"), jTextFieldNomCommDefendeur, org.jdesktop.beansbinding.BeanProperty.create("text"));
        bindingGroup.addBinding(binding);

        org.openide.awt.Mnemonics.setLocalizedText(jLabel3, org.openide.util.NbBundle.getMessage(SocieteBoPanel.class, "SocieteBoPanel.jLabel3.text")); // NOI18N

        jTextFieldSiret.setToolTipText(org.openide.util.NbBundle.getMessage(SocieteBoPanel.class, "SocieteBoPanel.jTextFieldSiret.toolTipText")); // NOI18N

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, societe, org.jdesktop.beansbinding.ELProperty.create("${siret}"), jTextFieldSiret, org.jdesktop.beansbinding.BeanProperty.create("text"));
        bindingGroup.addBinding(binding);

        jTextFieldKBISS.setToolTipText(org.openide.util.NbBundle.getMessage(SocieteBoPanel.class, "SocieteBoPanel.jTextFieldKBISS.toolTipText")); // NOI18N

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, societe, org.jdesktop.beansbinding.ELProperty.create("${addr.adrline7}"), jTextFieldKBISS, org.jdesktop.beansbinding.BeanProperty.create("text"));
        bindingGroup.addBinding(binding);

        org.openide.awt.Mnemonics.setLocalizedText(jButtonLoadKBISS, org.openide.util.NbBundle.getMessage(SocieteBoPanel.class, "SocieteBoPanel.jButtonLoadKBISS.text")); // NOI18N
        jButtonLoadKBISS.setToolTipText(org.openide.util.NbBundle.getMessage(SocieteBoPanel.class, "SocieteBoPanel.jButtonLoadKBISS.toolTipText")); // NOI18N
        jButtonLoadKBISS.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonLoadKBISSActionPerformed(evt);
            }
        });

        org.openide.awt.Mnemonics.setLocalizedText(jLabel4, org.openide.util.NbBundle.getMessage(SocieteBoPanel.class, "SocieteBoPanel.jLabel4.text")); // NOI18N
        jLabel4.setToolTipText(org.openide.util.NbBundle.getMessage(SocieteBoPanel.class, "SocieteBoPanel.jLabel4.toolTipText")); // NOI18N
        jLabel4.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel4MouseClicked(evt);
            }
        });

        org.openide.awt.Mnemonics.setLocalizedText(jCheckBoxRedre, org.openide.util.NbBundle.getMessage(SocieteBoPanel.class, "SocieteBoPanel.jCheckBoxRedre.text")); // NOI18N
        jCheckBoxRedre.setToolTipText(org.openide.util.NbBundle.getMessage(SocieteBoPanel.class, "SocieteBoPanel.jCheckBoxRedre.toolTipText")); // NOI18N

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, societe, org.jdesktop.beansbinding.ELProperty.create("${redressement}"), jCheckBoxRedre, org.jdesktop.beansbinding.BeanProperty.create("selected"));
        bindingGroup.addBinding(binding);

        org.openide.awt.Mnemonics.setLocalizedText(jCheckBoxLiquidation, org.openide.util.NbBundle.getMessage(SocieteBoPanel.class, "SocieteBoPanel.jCheckBoxLiquidation.text")); // NOI18N
        jCheckBoxLiquidation.setToolTipText(org.openide.util.NbBundle.getMessage(SocieteBoPanel.class, "SocieteBoPanel.jCheckBoxLiquidation.toolTipText")); // NOI18N

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, societe, org.jdesktop.beansbinding.ELProperty.create("${liquidation}"), jCheckBoxLiquidation, org.jdesktop.beansbinding.BeanProperty.create("selected"));
        bindingGroup.addBinding(binding);

        org.openide.awt.Mnemonics.setLocalizedText(jButtonLiquidation, org.openide.util.NbBundle.getMessage(SocieteBoPanel.class, "SocieteBoPanel.jButtonLiquidation.text")); // NOI18N

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, jCheckBoxLiquidation, org.jdesktop.beansbinding.ELProperty.create("${selected}"), jButtonLiquidation, org.jdesktop.beansbinding.BeanProperty.create("enabled"));
        bindingGroup.addBinding(binding);

        jButtonLiquidation.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonLiquidationActionPerformed(evt);
            }
        });

        org.openide.awt.Mnemonics.setLocalizedText(jButtonRedressement, org.openide.util.NbBundle.getMessage(SocieteBoPanel.class, "SocieteBoPanel.jButtonRedressement.text")); // NOI18N

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, jCheckBoxRedre, org.jdesktop.beansbinding.ELProperty.create("${selected}"), jButtonRedressement, org.jdesktop.beansbinding.BeanProperty.create("enabled"));
        bindingGroup.addBinding(binding);

        jButtonRedressement.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonRedressementActionPerformed(evt);
            }
        });

        org.openide.awt.Mnemonics.setLocalizedText(jCheckBoxAgs, org.openide.util.NbBundle.getMessage(SocieteBoPanel.class, "SocieteBoPanel.jCheckBoxAgs.text")); // NOI18N
        jCheckBoxAgs.setToolTipText(org.openide.util.NbBundle.getMessage(SocieteBoPanel.class, "SocieteBoPanel.jCheckBoxAgs.toolTipText")); // NOI18N

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, societe, org.jdesktop.beansbinding.ELProperty.create("${ags}"), jCheckBoxAgs, org.jdesktop.beansbinding.BeanProperty.create("selected"));
        bindingGroup.addBinding(binding);

        jTextFieldAGS.setToolTipText(org.openide.util.NbBundle.getMessage(SocieteBoPanel.class, "SocieteBoPanel.jTextFieldAGS.toolTipText")); // NOI18N

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, societe, org.jdesktop.beansbinding.ELProperty.create("${agscgea}"), jTextFieldAGS, org.jdesktop.beansbinding.BeanProperty.create("text"));
        bindingGroup.addBinding(binding);
        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, jCheckBoxAgs, org.jdesktop.beansbinding.ELProperty.create("${selected}"), jTextFieldAGS, org.jdesktop.beansbinding.BeanProperty.create("enabled"));
        bindingGroup.addBinding(binding);

        jTextFieldAGS.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jTextFieldAGSMouseEntered(evt);
            }
        });

        org.openide.awt.Mnemonics.setLocalizedText(jLabelNbSalarie, org.openide.util.NbBundle.getMessage(SocieteBoPanel.class, "SocieteBoPanel.jLabelNbSalarie.text")); // NOI18N

        jTextFieldNBSalaries.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("######"))));

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, societe, org.jdesktop.beansbinding.ELProperty.create("${effectif}"), jTextFieldNBSalaries, org.jdesktop.beansbinding.BeanProperty.create("value"));
        bindingGroup.addBinding(binding);

        jTextFieldNBSalaries.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTextFieldNBSalariesKeyReleased(evt);
            }
        });

        buttonGroup1.add(jRadioButtonLowerThan10);
        org.openide.awt.Mnemonics.setLocalizedText(jRadioButtonLowerThan10, org.openide.util.NbBundle.getMessage(SocieteBoPanel.class, "SocieteBoPanel.jRadioButtonLowerThan10.text")); // NOI18N
        jRadioButtonLowerThan10.setToolTipText(org.openide.util.NbBundle.getMessage(SocieteBoPanel.class, "SocieteBoPanel.jRadioButtonLowerThan10.toolTipText")); // NOI18N
        jRadioButtonLowerThan10.setEnabled(false);

        buttonGroup1.add(jRadioButton10to49);
        org.openide.awt.Mnemonics.setLocalizedText(jRadioButton10to49, org.openide.util.NbBundle.getMessage(SocieteBoPanel.class, "SocieteBoPanel.jRadioButton10to49.text")); // NOI18N
        jRadioButton10to49.setEnabled(false);

        buttonGroup1.add(jRadioButton50to499);
        org.openide.awt.Mnemonics.setLocalizedText(jRadioButton50to499, org.openide.util.NbBundle.getMessage(SocieteBoPanel.class, "SocieteBoPanel.jRadioButton50to499.text")); // NOI18N
        jRadioButton50to499.setEnabled(false);

        buttonGroup1.add(jRadioButtonMoreThan500);
        org.openide.awt.Mnemonics.setLocalizedText(jRadioButtonMoreThan500, org.openide.util.NbBundle.getMessage(SocieteBoPanel.class, "SocieteBoPanel.jRadioButtonMoreThan500.text")); // NOI18N
        jRadioButtonMoreThan500.setEnabled(false);

        jTextFieldApeNaf.setToolTipText(org.openide.util.NbBundle.getMessage(SocieteBoPanel.class, "SocieteBoPanel.jTextFieldApeNaf.toolTipText")); // NOI18N

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, societe, org.jdesktop.beansbinding.ELProperty.create("${nafape}"), jTextFieldApeNaf, org.jdesktop.beansbinding.BeanProperty.create("text"));
        bindingGroup.addBinding(binding);

        jTextFieldApeNaf.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jTextFieldApeNafMouseEntered(evt);
            }
        });

        jTextFieldActivity.setToolTipText(org.openide.util.NbBundle.getMessage(SocieteBoPanel.class, "SocieteBoPanel.jTextFieldActivity.toolTipText")); // NOI18N

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, societe, org.jdesktop.beansbinding.ELProperty.create("${lblActivite}"), jTextFieldActivity, org.jdesktop.beansbinding.BeanProperty.create("text"));
        bindingGroup.addBinding(binding);

        org.openide.awt.Mnemonics.setLocalizedText(jButtonNAFAPE, org.openide.util.NbBundle.getMessage(SocieteBoPanel.class, "SocieteBoPanel.jButtonNAFAPE.text")); // NOI18N
        jButtonNAFAPE.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonNAFAPEActionPerformed(evt);
            }
        });

        org.openide.awt.Mnemonics.setLocalizedText(jLabelAPENAF, org.openide.util.NbBundle.getMessage(SocieteBoPanel.class, "SocieteBoPanel.jLabelAPENAF.text")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(jLabel5, org.openide.util.NbBundle.getMessage(SocieteBoPanel.class, "SocieteBoPanel.jLabel5.text")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(jLabel6, org.openide.util.NbBundle.getMessage(SocieteBoPanel.class, "SocieteBoPanel.jLabel6.text")); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel6, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel5)
                            .addComponent(jLabelAPENAF)
                            .addComponent(jLabelNbSalarie))
                        .addGap(33, 33, 33)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jTextFieldApeNaf, javax.swing.GroupLayout.PREFERRED_SIZE, 176, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButtonNAFAPE))
                            .addComponent(jTextFieldNBSalaries, javax.swing.GroupLayout.PREFERRED_SIZE, 176, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jRadioButtonLowerThan10)
                            .addComponent(jRadioButton10to49)
                            .addComponent(jRadioButton50to499)
                            .addComponent(jRadioButtonMoreThan500)
                            .addComponent(jTextFieldActivity)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(jCheckBoxAgs)
                        .addGap(18, 18, 18)
                        .addComponent(jTextFieldAGS, javax.swing.GroupLayout.PREFERRED_SIZE, 287, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(jCheckBoxRedre)
                                .addGap(83, 83, 83))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jCheckBoxLiquidation)
                                .addGap(18, 18, 18)))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jButtonRedressement)
                            .addComponent(jButtonLiquidation)))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(jLabel4)
                                .addComponent(jLabel3))
                            .addComponent(jLabel1))
                        .addGap(28, 28, 28)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jTextFieldNomDefendeur, javax.swing.GroupLayout.PREFERRED_SIZE, 343, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jTextFieldNomCommDefendeur, javax.swing.GroupLayout.PREFERRED_SIZE, 343, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jTextFieldSiret, javax.swing.GroupLayout.PREFERRED_SIZE, 343, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jTextFieldKBISS, javax.swing.GroupLayout.PREFERRED_SIZE, 343, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButtonLoadKBISS)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jLabel6)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jTextFieldNomDefendeur, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jTextFieldNomCommDefendeur, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jTextFieldSiret, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(jTextFieldKBISS, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButtonLoadKBISS))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelAPENAF)
                    .addComponent(jTextFieldApeNaf, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButtonNAFAPE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jTextFieldActivity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5, javax.swing.GroupLayout.Alignment.TRAILING))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabelNbSalarie)
                    .addComponent(jTextFieldNBSalaries, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(4, 4, 4)
                .addComponent(jRadioButtonLowerThan10)
                .addGap(4, 4, 4)
                .addComponent(jRadioButton10to49)
                .addGap(1, 1, 1)
                .addComponent(jRadioButton50to499)
                .addGap(6, 6, 6)
                .addComponent(jRadioButtonMoreThan500)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButtonRedressement)
                    .addComponent(jCheckBoxRedre))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jCheckBoxLiquidation)
                    .addComponent(jButtonLiquidation))
                .addGap(10, 10, 10)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jCheckBoxAgs)
                    .addComponent(jTextFieldAGS, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        bindingGroup.bind();
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonLoadKBISSActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonLoadKBISSActionPerformed
	JFileChooser c = new JFileChooser();
	int res = c.showOpenDialog(this);
	if (res == JFileChooser.APPROVE_OPTION) {
	    final File file = c.getSelectedFile();
	    SwingUtilities.invokeLater(new Runnable() {
		@Override
		public void run() {
		    jTextFieldKBISS.setText(file.getPath());
		}
	    });
	}
    }//GEN-LAST:event_jButtonLoadKBISSActionPerformed

    private void jButtonLiquidationActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonLiquidationActionPerformed
	if (liquidation == null) {
	    liquidation = showLiquidation();
	} else {
	    liquidation.setVisible(true);

	}
    }//GEN-LAST:event_jButtonLiquidationActionPerformed

    public void fillTextFields(List<Document> prj) {
	prj.add(jTextFieldAGS.getDocument());
	prj.add(jTextFieldActivity.getDocument());
	prj.add(jTextFieldApeNaf.getDocument());
	prj.add(jTextFieldKBISS.getDocument());
	prj.add(jTextFieldNBSalaries.getDocument());
	prj.add(jTextFieldNomCommDefendeur.getDocument());
	prj.add(jTextFieldNomDefendeur.getDocument());
	prj.add(jTextFieldSiret.getDocument());

    }

    public boolean isEmpty(AbstractPanel aThis) {
	if (aThis.isEmpty(jTextFieldNomDefendeur, jTextFieldSiret,
		jTextFieldApeNaf,
		jTextFieldActivity, jTextFieldNBSalaries)) {
	    return false;
	}
	if (jCheckBoxAgs.isSelected()) {
	    return !aThis.isEmpty(jTextFieldAGS);
	}

	return true;
    }

    private Dialog showRedressement() {

	final String[] choix = new String[]{AJOUTER, ANNULER};
	final String valeurParDefaut = choix[0];
	Act actionlistener = new Act();
	RedressementJPanel represantant = new RedressementJPanel(this.societe.getIdredressement());
	DialogDescriptor dd = new DialogDescriptor(represantant, "Redressement",
		true,
		choix,
		valeurParDefaut, 0, null,
		actionlistener);
	Dialog resDls = DialogDisplayer.getDefault().createDialog(dd);
	actionlistener.setDialog(resDls);
	resDls.setVisible(true);
	return resDls;
    }

    private Dialog showLiquidation() {

	LiquidationJPanel represantant = new LiquidationJPanel(this.societe.getIdliquidation());
	final String[] choix = new String[]{AJOUTER, ANNULER};
	final String valeurParDefaut = choix[0];
	Dialog resDls = null;
	Act actionlistener = new Act();
	DialogDescriptor dd = new DialogDescriptor(represantant, "Liquidation", true,
		choix,
		valeurParDefaut,
		0,
		null,
		actionlistener);
	resDls = DialogDisplayer.getDefault().createDialog(dd);
	actionlistener.setDialog(resDls);
	resDls.setVisible(true);
	return resDls;
    }

    private class Act implements ActionListener {

	private Dialog dialog = null;

	public Act() {
	}

	public Dialog getDialog() {
	    return dialog;
	}

	public void setDialog(Dialog dialog) {
	    this.dialog = dialog;
	}

	@Override
	public void actionPerformed(ActionEvent e) {
	    if (AJOUTER.equals(e.getActionCommand())) {
		getAbstractPanel().saveRoot();
	    } else if (ANNULER.equals(e.getActionCommand())) {
	    }

	    if (this.dialog != null) {
		this.dialog.setVisible(false);

	    }
	}
    }
    private void jButtonRedressementActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonRedressementActionPerformed
	if (redressementDialog == null) {
	    redressementDialog = showRedressement();
	} else {
	    redressementDialog.setVisible(true);

	}

    }//GEN-LAST:event_jButtonRedressementActionPerformed

    private void jTextFieldAGSMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTextFieldAGSMouseEntered
	//agsComment();
    }//GEN-LAST:event_jTextFieldAGSMouseEntered

    private void jTextFieldNBSalariesKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldNBSalariesKeyReleased
	Pattern p = Pattern.compile("\\d+", 6);
	String nbStr = jTextFieldNBSalaries.getText();
	if (p.matcher(nbStr).matches()) {
	    final int here = Integer.parseInt(nbStr.trim());
	    SwingUtilities.invokeLater(new Runnable() {
		@Override
		public void run() {
		    if (here < 10) {
			jRadioButtonLowerThan10.setSelected(true);
		    } else if (here < 50) {
			jRadioButton10to49.setSelected(true);
		    } else if (here < 500) {
			jRadioButton50to499.setSelected(true);
		    } else if (here >= 500) {
			jRadioButtonMoreThan500.setSelected(true);
		    }
		}
	    });
	}
    }//GEN-LAST:event_jTextFieldNBSalariesKeyReleased

    private void jTextFieldApeNafMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTextFieldApeNafMouseEntered
	/*if (GlobalParameters.NAFCODES != null){
	 fillEditorText(GlobalParameters.NAFCODES.toString());
	 }*/
    }//GEN-LAST:event_jTextFieldApeNafMouseEntered

    private void jButtonNAFAPEActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonNAFAPEActionPerformed
	if (nafDialog == null) {
	    nafDialog = showNafApe();
	} else {
	    nafDialog.setVisible(true);

	}

    }//GEN-LAST:event_jButtonNAFAPEActionPerformed

    public Societe getSociete() {
	return societe;
    }

    public void setSociete(Societe societe) {
	this.societe = societe;
    }

    private Dialog showNafApe() {
	if (naf == null) {
	    naf = new NAFAPEJPanel();
	}
	PanelAct actionlistener = new PanelAct();

	DialogDescriptor dd = new DialogDescriptor(naf, "NAF/APE", true,
		new Object[]{OK, ANNULER}, OK, 0, null,
		actionlistener);

	Dialog resDls = DialogDisplayer.getDefault().createDialog(dd);
	actionlistener.setDlg(resDls);
	resDls.setVisible(true);
	resDls.setName(section);
	return resDls;
    }

    class PanelAct implements ActionListener {

	private Dialog resDls;
	public PanelAct() {
	}

	@Override
	public void actionPerformed(ActionEvent e) {
	    if (OK.equals(e.getActionCommand())) {
		final Law l = (Law) naf.getjList1().getSelectedValue();
		if (l != null) {
		    jTextFieldActivity.setText(l.getContent());
		    jTextFieldApeNaf.setText(l.getArticle());
		    section = R1441_9.getInstance().calcSection(l.getArticle(), false);
		}
		if (isConseilNotNull()) {
		    NotifyDescriptor nd = new NotifyDescriptor.Message("Lorsque vous choisirez le Conseil des Prud'Hommes,\nla section compétente selon votre cas serait :\n" + section);
		    DialogDisplayer.getDefault().notify(nd);
		    getAbstractPanel().getParentRoot().getConseil().setSection(section);
		}
		resDls.setVisible(false);
	    } else if (ANNULER.equals(e.getActionCommand())) {
		resDls.setVisible(false);
	    }
	    /*SwingUtilities.invokeLater(new Runnable() {
	     @Override
	     public void run() {
	     if (getAbstractPanel() != null && getAbstractPanel().getParentRoot() != null && getAbstractPanel().getParentRoot().getConseil() != null) {
	     NotifyDescriptor nd = new NotifyDescriptor.Message("Lorsque vous choisirez le Conseil des Prud'Hommes,\nla section compétente selon votre cas serait :\n"+naf.getSection());
	     DialogDisplayer.getDefault().notify(nd);
	     getAbstractPanel().getParentRoot().getConseil().setSection(naf.getSection());
	     }
	     }
	     });*/

	}

	private void setDlg(Dialog presDls) {
	    this.resDls = presDls;
	    
	}

	private boolean isConseilNotNull() {
	    return getAbstractPanel() != null && getAbstractPanel().getParentRoot() != null && getAbstractPanel().getParentRoot().getConseil() != null;
	}
    }

    public String getSection() {
	return (this.nafDialog == null) ? null : this.nafDialog.getName();
    }

    public AbstractPanel getAbstractPanel() {
	return abstractPanel;
    }

    public void setAbstractPanel(AbstractPanel abstractPanel) {
	this.abstractPanel = abstractPanel;
    }

    private void jLabel4MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel4MouseClicked
	// TODO add your handling code here:
    }//GEN-LAST:event_jLabel4MouseClicked
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JButton jButtonLiquidation;
    private javax.swing.JButton jButtonLoadKBISS;
    private javax.swing.JButton jButtonNAFAPE;
    private javax.swing.JButton jButtonRedressement;
    private javax.swing.JCheckBox jCheckBoxAgs;
    private javax.swing.JCheckBox jCheckBoxLiquidation;
    private javax.swing.JCheckBox jCheckBoxRedre;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabelAPENAF;
    private javax.swing.JLabel jLabelNbSalarie;
    private javax.swing.JRadioButton jRadioButton10to49;
    private javax.swing.JRadioButton jRadioButton50to499;
    private javax.swing.JRadioButton jRadioButtonLowerThan10;
    private javax.swing.JRadioButton jRadioButtonMoreThan500;
    private javax.swing.JTextField jTextFieldAGS;
    private javax.swing.JTextField jTextFieldActivity;
    private javax.swing.JTextField jTextFieldApeNaf;
    private javax.swing.JTextField jTextFieldKBISS;
    private javax.swing.JFormattedTextField jTextFieldNBSalaries;
    private javax.swing.JTextField jTextFieldNomCommDefendeur;
    private javax.swing.JTextField jTextFieldNomDefendeur;
    private javax.swing.JTextField jTextFieldSiret;
    private com.bi.right.customer.bo.Societe societe;
    private org.jdesktop.beansbinding.BindingGroup bindingGroup;
    // End of variables declaration//GEN-END:variables
}
