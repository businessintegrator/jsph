/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package com.bi.right.customer.panel;

import com.bi.right.customer.LawsAction;
import com.bi.right.customer.PiecesAction;
import com.bi.right.customer.bo.Demande;
import com.bi.right.customer.bo.GUIManager;
import com.bi.right.customer.util.Irreell;
import java.io.File;
import java.io.IOException;
import java.net.URISyntaxException;
import java.util.ArrayList;
import java.util.List;
import java.util.logging.Logger;
import javax.swing.JList;
import javax.swing.JMenuItem;
import javax.swing.JPopupMenu;
import javax.swing.JTextPane;
import javax.swing.SwingUtilities;
import javax.swing.text.DefaultStyledDocument;
import javax.swing.text.Document;
import javax.swing.text.StyleContext;
import org.jdesktop.beansbinding.BindingGroup;
import org.openide.util.Exceptions;

/**
 *
 * @author rafaralahitsimba tiaray
 */
public class DiscussionJPanel extends AbstractPanel {

    private final static Logger logger = Logger.getLogger("Discussion");
    /**
     * Creates new form DiscussionJPanel
     */
    public DiscussionJPanel() {
	initComponents();
    }

    @Override
    public AbstractPanel getNext() {

	saveArg();
	return super.getNext();
    }

    public DiscussionJPanel(GUIManager root, Demande current, PiecesJPanel pieces) {
	super(root);
	this.treatedDemande = current;
	initComponents();
	jTextFieldlbl.setText(this.treatedDemande.getLbl());
	if (pieces == null) {
	    pieces = new PiecesJPanel();
	}
	final JTextPane panel = getjEditorPaneArg();
	PiecesAction actpieces = new PiecesAction(panel);
	LawsAction lawsAction = new LawsAction(panel);
	actpieces.setPieces(pieces);

	JMenuItem piecesitem = new JMenuItem(actpieces);
	JMenuItem artcl = new JMenuItem(lawsAction);
	JPopupMenu internalPopup = new JPopupMenu();
	internalPopup.add(piecesitem);
	internalPopup.add(artcl);
	panel.setComponentPopupMenu(internalPopup);
	//if (/*this.treatedDemande.isArgumented() && */this.treatedDemande.getArgumentationPath()!= null){
	String argPath = this.treatedDemande.getArgumentationPath();
	logger.info("Argumentation path is "+argPath);
	
	if (argPath != null) {
	    File fB = new File(argPath);
	    if (fB.exists()) {
		Irreell irreel = new Irreell(panel, fB);
		irreel.run();
		
	    } else {
		//charger un argumentation
		logger.info("Argumentation path does not exists");
	    }
	}

	//}
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        bindingGroup = new org.jdesktop.beansbinding.BindingGroup();

        gUIManager1 = getParentRoot();
        treatedDemande = getTreatedDemande();
        jPanelCener = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabelArg = new javax.swing.JLabel();
        jTextFieldlbl = new javax.swing.JTextField();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jListCT = new javax.swing.JList();
        jButtonpLUS2 = new javax.swing.JButton();
        jButtonmOINS2 = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane4 = new javax.swing.JScrollPane();
        jListCC = new javax.swing.JList();
        jButtonpLUS1 = new javax.swing.JButton();
        jButtonmOINS1 = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane5 = new javax.swing.JScrollPane();
        jListConv = new javax.swing.JList();
        jButtonpLUS = new javax.swing.JButton();
        jButtonmOINS = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jEditorPaneArg = new javax.swing.JTextPane(doc);

        setLayout(new java.awt.BorderLayout());

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        org.openide.awt.Mnemonics.setLocalizedText(jLabel1, org.openide.util.NbBundle.getMessage(DiscussionJPanel.class, "DiscussionJPanel.jLabel1.text")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(jLabel2, org.openide.util.NbBundle.getMessage(DiscussionJPanel.class, "DiscussionJPanel.jLabel2.text")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(jLabelArg, org.openide.util.NbBundle.getMessage(DiscussionJPanel.class, "DiscussionJPanel.jLabelArg.text")); // NOI18N

        jTextFieldlbl.setEditable(false);

        org.jdesktop.beansbinding.Binding binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ, treatedDemande, org.jdesktop.beansbinding.ELProperty.create("${argumentationPath}"), jTextFieldlbl, org.jdesktop.beansbinding.BeanProperty.create("text_ON_FOCUS_LOST"), "");
        bindingGroup.addBinding(binding);

        jTabbedPane1.setTabPlacement(javax.swing.JTabbedPane.BOTTOM);
        jTabbedPane1.setToolTipText(org.openide.util.NbBundle.getMessage(DiscussionJPanel.class, "DiscussionJPanel.jTabbedPane1.toolTipText")); // NOI18N
        jTabbedPane1.setRequestFocusEnabled(false);

        jPanel1.setLayout(new java.awt.BorderLayout());

        jListCT.setModel(new javax.swing.AbstractListModel() {
            String[] strings = { "http://www.jsph.fr" };
            public int getSize() { return strings.length; }
            public Object getElementAt(int i) { return strings[i]; }
        });
        jListCT.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                openDefaultBrowser(evt);
            }
        });
        jScrollPane2.setViewportView(jListCT);

        jPanel1.add(jScrollPane2, java.awt.BorderLayout.CENTER);

        org.openide.awt.Mnemonics.setLocalizedText(jButtonpLUS2, org.openide.util.NbBundle.getMessage(DiscussionJPanel.class, "DiscussionJPanel.jButtonpLUS2.text")); // NOI18N
        jPanel1.add(jButtonpLUS2, java.awt.BorderLayout.WEST);

        org.openide.awt.Mnemonics.setLocalizedText(jButtonmOINS2, org.openide.util.NbBundle.getMessage(DiscussionJPanel.class, "DiscussionJPanel.jButtonmOINS2.text")); // NOI18N
        jPanel1.add(jButtonmOINS2, java.awt.BorderLayout.EAST);

        jTabbedPane1.addTab(org.openide.util.NbBundle.getMessage(DiscussionJPanel.class, "DiscussionJPanel.jPanel1.TabConstraints.tabTitle"), jPanel1); // NOI18N

        jPanel2.setLayout(new java.awt.BorderLayout());

        jListCC.setModel(new javax.swing.AbstractListModel() {
            String[] strings = { "http://www.conseil-etat.fr/fr/base-de-jurisprudence/" };
            public int getSize() { return strings.length; }
            public Object getElementAt(int i) { return strings[i]; }
        });
        jListCC.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                openDefaultBrowser(evt);
            }
        });
        jScrollPane4.setViewportView(jListCC);

        jPanel2.add(jScrollPane4, java.awt.BorderLayout.CENTER);

        org.openide.awt.Mnemonics.setLocalizedText(jButtonpLUS1, org.openide.util.NbBundle.getMessage(DiscussionJPanel.class, "DiscussionJPanel.jButtonpLUS1.text")); // NOI18N
        jPanel2.add(jButtonpLUS1, java.awt.BorderLayout.WEST);

        org.openide.awt.Mnemonics.setLocalizedText(jButtonmOINS1, org.openide.util.NbBundle.getMessage(DiscussionJPanel.class, "DiscussionJPanel.jButtonmOINS1.text")); // NOI18N
        jPanel2.add(jButtonmOINS1, java.awt.BorderLayout.EAST);

        jTabbedPane1.addTab(org.openide.util.NbBundle.getMessage(DiscussionJPanel.class, "DiscussionJPanel.jPanel2.TabConstraints.tabTitle"), jPanel2); // NOI18N

        jPanel3.setLayout(new java.awt.BorderLayout());

        jListConv.setModel(new javax.swing.AbstractListModel() {
            String[] strings = { "http://www.legifrance.gouv.fr/initRechConvColl.do", " " };
            public int getSize() { return strings.length; }
            public Object getElementAt(int i) { return strings[i]; }
        });
        jListConv.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jListConv.setToolTipText(org.openide.util.NbBundle.getMessage(DiscussionJPanel.class, "DiscussionJPanel.jListConv.toolTipText")); // NOI18N
        jListConv.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                openDefaultBrowser(evt);
            }
        });
        jScrollPane5.setViewportView(jListConv);

        jPanel3.add(jScrollPane5, java.awt.BorderLayout.CENTER);

        org.openide.awt.Mnemonics.setLocalizedText(jButtonpLUS, org.openide.util.NbBundle.getMessage(DiscussionJPanel.class, "DiscussionJPanel.jButtonpLUS.text")); // NOI18N
        jPanel3.add(jButtonpLUS, java.awt.BorderLayout.WEST);

        org.openide.awt.Mnemonics.setLocalizedText(jButtonmOINS, org.openide.util.NbBundle.getMessage(DiscussionJPanel.class, "DiscussionJPanel.jButtonmOINS.text")); // NOI18N
        jPanel3.add(jButtonmOINS, java.awt.BorderLayout.EAST);

        jTabbedPane1.addTab(org.openide.util.NbBundle.getMessage(DiscussionJPanel.class, "DiscussionJPanel.jPanel3.TabConstraints.tabTitle"), jPanel3); // NOI18N

        jEditorPaneArg.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jEditorPaneArg.setToolTipText(org.openide.util.NbBundle.getMessage(DiscussionJPanel.class, "DiscussionJPanel.jEditorPaneArg.toolTipText")); // NOI18N
        jEditorPaneArg.setAutoscrolls(false);
        jScrollPane1.setViewportView(jEditorPaneArg);

        javax.swing.GroupLayout jPanelCenerLayout = new javax.swing.GroupLayout(jPanelCener);
        jPanelCener.setLayout(jPanelCenerLayout);
        jPanelCenerLayout.setHorizontalGroup(
            jPanelCenerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelCenerLayout.createSequentialGroup()
                .addGroup(jPanelCenerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabelArg, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanelCenerLayout.createSequentialGroup()
                        .addGroup(jPanelCenerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jTextFieldlbl, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 804, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 287, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 605, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 9, Short.MAX_VALUE))
                    .addComponent(jTabbedPane1))
                .addContainerGap())
        );
        jPanelCenerLayout.setVerticalGroup(
            jPanelCenerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelCenerLayout.createSequentialGroup()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTextFieldlbl, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 10, Short.MAX_VALUE)
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabelArg)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 341, Short.MAX_VALUE))
        );

        jTextFieldlbl.setText(this.treatedDemande.getLbl());

        add(jPanelCener, java.awt.BorderLayout.CENTER);

        bindingGroup.bind();
    }// </editor-fold>//GEN-END:initComponents

    private void openDefaultBrowser(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_openDefaultBrowser
	// TODO add your handling code here:
	if (evt.getClickCount() == 2) {
	    Object o = evt.getSource();
	    if (o instanceof JList) {
		String url = (String) ((JList) o).getSelectedValue();
		if (url != null) {
		    openBrowser(url);
		}
	    }
	}
    }//GEN-LAST:event_openDefaultBrowser

    public Demande getTreatedDemande() {
	return treatedDemande;
    }

    public void setTreatedDemande(Demande treatedDemande) {
	this.treatedDemande = treatedDemande;
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private com.bi.right.customer.bo.GUIManager gUIManager1;
    private javax.swing.JButton jButtonmOINS;
    private javax.swing.JButton jButtonmOINS1;
    private javax.swing.JButton jButtonmOINS2;
    private javax.swing.JButton jButtonpLUS;
    private javax.swing.JButton jButtonpLUS1;
    private javax.swing.JButton jButtonpLUS2;
    private StyleContext sc = new StyleContext();

    private DefaultStyledDocument doc = new DefaultStyledDocument(sc);
    private javax.swing.JTextPane jEditorPaneArg;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabelArg;
    private javax.swing.JList jListCC;
    private javax.swing.JList jListCT;
    private javax.swing.JList jListConv;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanelCener;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTextField jTextFieldlbl;
    private com.bi.right.customer.bo.Demande treatedDemande;
    private org.jdesktop.beansbinding.BindingGroup bindingGroup;
    // End of variables declaration//GEN-END:variables

    @Override
    public List<Document> getUndoableDocuments() {
	ArrayList<Document> prj = new ArrayList<Document>();
	prj.add(jEditorPaneArg.getDocument());
	return prj;
    }

    public JTextPane getjEditorPaneArg() {
	return jEditorPaneArg;
    }

    public void setjEditorPaneArg(JTextPane jEditorPaneArg) {
	this.jEditorPaneArg = jEditorPaneArg;
    }

    @Override
    public boolean isNextPossible() {
	if (isEmpty(jEditorPaneArg)) {
	    return false;
	}
	return true;
    }

    @Override
    public BindingGroup getBindingGroup() {
	return bindingGroup;
    }

    @Override
    public void initJComponents() {
	initComponents();
    }

    private void openBrowser(String url) {
	if (java.awt.Desktop.isDesktopSupported()) {
	    java.awt.Desktop desktop = java.awt.Desktop.getDesktop();
	    if (desktop.isSupported(java.awt.Desktop.Action.BROWSE)) {
		try {
		    java.net.URI uri = new java.net.URI(url);
		    desktop.browse(uri);
		} catch (IOException ex) {
		    Exceptions.printStackTrace(ex);
		} catch (URISyntaxException ex) {
		    Exceptions.printStackTrace(ex);
		}
	    }
	}
    }

    private void saveArg() {
	DiscussionActionListener discussionAct = new DiscussionActionListener(getParentRoot().getPath(), getjEditorPaneArg().getDocument(), getTreatedDemande());
	discussionAct.save();
    }
}
