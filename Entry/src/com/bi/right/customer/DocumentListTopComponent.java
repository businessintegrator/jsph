/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package com.bi.right.customer;

import com.bi.right.customer.bo.Chemindoc;
import com.bi.right.customer.bo.Demandeur;
import com.bi.right.customer.bo.GUIManager;
import com.bi.right.customer.panel.PiecesJPanel;
import com.bi.right.customer.util.GlobalParameters;
import com.bi.right.customer.util.TopSavable;
import javax.swing.JFileChooser;
import javax.swing.SwingUtilities;
import org.netbeans.api.settings.ConvertAsProperties;
import org.openide.awt.ActionID;
import org.openide.awt.ActionReference;
import org.openide.windows.TopComponent;
import org.openide.util.NbBundle.Messages;
import org.openide.util.lookup.AbstractLookup;
import org.openide.util.lookup.InstanceContent;

/**
 * Top component which displays something.
 */
@ConvertAsProperties(
    dtd = "-//com.bi.right.customer//DocumentList//EN",
autostore = false)
@TopComponent.Description(
    preferredID = "DocumentListTopComponent",
iconBase = "com/bi/right/customer/pieces16x16.png",
persistenceType = TopComponent.PERSISTENCE_NEVER)
@TopComponent.Registration(mode = "properties", openAtStartup = false)
@ActionID(category = "Window", id = "com.bi.right.customer.DocumentListTopComponent")
@ActionReference(path = "Menu/Window" /*, position = 333 */)
@TopComponent.OpenActionRegistration(
    displayName = "#CTL_DocumentListAction",
preferredID = "DocumentListTopComponent")
@Messages({
    "CTL_DocumentListAction=DocumentList",
    "CTL_DocumentListTopComponent=Pieces",
    "HINT_DocumentListTopComponent=Le panneau des pieces"
})
public final class DocumentListTopComponent extends AbstractJsphTopComponent<Chemindoc> {
    private static DocumentListTopComponent instance;

    static DocumentListTopComponent getInstance() {
	if (instance == null){
	    instance = new DocumentListTopComponent();
	}
	return instance;
    }

    public DocumentListTopComponent() {
        initComponents();
        //impl = new TopSavable<Chemindoc>(this.chemindoc, new InstanceContent(), GlobalParameters.getWorkDir(), "Defendeur");

       

        setName(Bundle.CTL_DocumentListTopComponent());
        setToolTipText(Bundle.HINT_DocumentListTopComponent());

        //associateLookup(new AbstractLookup(impl.getContent()));
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        piecesPanel = new com.bi.right.customer.panel.PiecesJPanel();

        setAutoscrolls(true);
        setLayout(new java.awt.BorderLayout());
        add(piecesPanel, java.awt.BorderLayout.CENTER);
    }// </editor-fold>//GEN-END:initComponents

   
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private final com.bi.right.customer.bo.Chemindoc chemindoc = new com.bi.right.customer.bo.Chemindoc();
    private com.bi.right.customer.panel.PiecesJPanel piecesPanel;
    // End of variables declaration//GEN-END:variables

   @Override
    public void componentOpened() {
        // TODO add custom code on component opening
       openedTreatment(this.piecesPanel);
    }

    @Override
    public void componentClosed() {
        // TODO add custom code on component closing
        this.piecesPanel.saveAuto();
        closedTreatment();
    }


    void writeProperties(java.util.Properties p) {
        // better to version settings since initial version as advocated at
        // http://wiki.apidesign.org/wiki/PropertyFiles
        p.setProperty("version", "1.0");
        // TODO store your settings
    }

    void readProperties(java.util.Properties p) {
        String version = p.getProperty("version");
        // TODO read your settings according to their version
    }

    
	
    

    void initPieces(String piecesPath) {
	this.piecesPanel.quantify(piecesPath);
	
    }

    void initPieces(GUIManager project, String piecesPath) {
	initPieces(piecesPath);
	this.piecesPanel.setCurrentDirectory(project);
    }

    public PiecesJPanel getPiecesPanel() {
	return piecesPanel;
    }

    public void setPiecesPanel(PiecesJPanel piecesPanel) {
	this.piecesPanel = piecesPanel;
    }

   
}
