/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package com.bi.right.customer;

import java.io.BufferedReader;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.OutputStream;
import java.net.URISyntaxException;
import java.util.ArrayList;
import java.util.List;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import javax.swing.JFileChooser;
import javax.swing.SwingUtilities;
import javax.swing.filechooser.FileFilter;
import org.netbeans.api.settings.ConvertAsProperties;
import org.openide.DialogDisplayer;
import org.openide.NotifyDescriptor;
import org.openide.awt.ActionID;
import org.openide.awt.ActionReference;
import org.openide.util.Exceptions;
import org.openide.windows.TopComponent;
import org.openide.util.NbBundle.Messages;

/**
 * Top component which displays something.
 */
@ConvertAsProperties(
    dtd = "-//com.bi.right.customer//DecoupeurDeLois//EN",
autostore = false)
@TopComponent.Description(
    preferredID = "DecoupeurDeLoisTopComponent",
//iconBase="SET/PATH/TO/ICON/HERE", 
persistenceType = TopComponent.PERSISTENCE_NEVER)
@TopComponent.Registration(mode = "explorer", openAtStartup = false)
@ActionID(category = "Window", id = "com.bi.right.customer.DecoupeurDeLoisTopComponent")
@ActionReference(path = "Menu/Window" /*, position = 333 */)
@TopComponent.OpenActionRegistration(
    displayName = "#CTL_DecoupeurDeLoisAction",
preferredID = "DecoupeurDeLoisTopComponent")
@Messages({
    "CTL_DecoupeurDeLoisAction=Indexeur de Lois",
    "CTL_DecoupeurDeLoisTopComponent=Indexeur de Lois",
    "HINT_DecoupeurDeLoisTopComponent=Indexeur de Lois"
})
public final class DecoupeurDeLoisTopComponent extends TopComponent {
    private  static  String [] STR = new String [] {
	    "^Derni.re modification.+",
	    "^Partie r.glementaire.+",
	    "^Partie legis.+",
            "^Livre .+",
            "^Titre .+",
	    "^Section .+",
            "^Chapitre .+"
	};


    public final static List<String> LIST = new ArrayList<String>();
    private File[] files_;
    private static File destination_;

    public DecoupeurDeLoisTopComponent() {
	initComponents();
	setName(Bundle.CTL_DecoupeurDeLoisTopComponent());
	setToolTipText(Bundle.HINT_DecoupeurDeLoisTopComponent());

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jButtonSources = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jButtonDest = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        jLabelDir = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();

        org.openide.awt.Mnemonics.setLocalizedText(jLabel1, org.openide.util.NbBundle.getMessage(DecoupeurDeLoisTopComponent.class, "DecoupeurDeLoisTopComponent.jLabel1.text")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(jButtonSources, org.openide.util.NbBundle.getMessage(DecoupeurDeLoisTopComponent.class, "DecoupeurDeLoisTopComponent.jButtonSources.text")); // NOI18N
        jButtonSources.setToolTipText(org.openide.util.NbBundle.getMessage(DecoupeurDeLoisTopComponent.class, "DecoupeurDeLoisTopComponent.jButtonSources.toolTipText")); // NOI18N
        jButtonSources.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSourcesActionPerformed(evt);
            }
        });

        org.openide.awt.Mnemonics.setLocalizedText(jLabel2, org.openide.util.NbBundle.getMessage(DecoupeurDeLoisTopComponent.class, "DecoupeurDeLoisTopComponent.jLabel2.text")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(jButtonDest, org.openide.util.NbBundle.getMessage(DecoupeurDeLoisTopComponent.class, "DecoupeurDeLoisTopComponent.jButtonDest.text")); // NOI18N
        jButtonDest.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonDestActionPerformed(evt);
            }
        });

        org.openide.awt.Mnemonics.setLocalizedText(jButton3, org.openide.util.NbBundle.getMessage(DecoupeurDeLoisTopComponent.class, "DecoupeurDeLoisTopComponent.jButton3.text")); // NOI18N
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        org.openide.awt.Mnemonics.setLocalizedText(jLabel5, org.openide.util.NbBundle.getMessage(DecoupeurDeLoisTopComponent.class, "DecoupeurDeLoisTopComponent.jLabel5.text")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(jLabelDir, org.openide.util.NbBundle.getMessage(DecoupeurDeLoisTopComponent.class, "DecoupeurDeLoisTopComponent.jLabelDir.text")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(jLabel7, org.openide.util.NbBundle.getMessage(DecoupeurDeLoisTopComponent.class, "DecoupeurDeLoisTopComponent.jLabel7.text")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(jLabel8, org.openide.util.NbBundle.getMessage(DecoupeurDeLoisTopComponent.class, "DecoupeurDeLoisTopComponent.jLabel8.text")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(jLabel9, org.openide.util.NbBundle.getMessage(DecoupeurDeLoisTopComponent.class, "DecoupeurDeLoisTopComponent.jLabel9.text")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(jLabel3, org.openide.util.NbBundle.getMessage(DecoupeurDeLoisTopComponent.class, "DecoupeurDeLoisTopComponent.jLabel3.text")); // NOI18N

        jLabel4.setForeground(new java.awt.Color(0, 0, 204));
        org.openide.awt.Mnemonics.setLocalizedText(jLabel4, org.openide.util.NbBundle.getMessage(DecoupeurDeLoisTopComponent.class, "DecoupeurDeLoisTopComponent.jLabel4.text")); // NOI18N
        jLabel4.setToolTipText(org.openide.util.NbBundle.getMessage(DecoupeurDeLoisTopComponent.class, "DecoupeurDeLoisTopComponent.jLabel4.toolTipText")); // NOI18N
        jLabel4.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel4MouseClicked(evt);
            }
        });

        jLabel6.setForeground(new java.awt.Color(0, 0, 204));
        org.openide.awt.Mnemonics.setLocalizedText(jLabel6, org.openide.util.NbBundle.getMessage(DecoupeurDeLoisTopComponent.class, "DecoupeurDeLoisTopComponent.jLabel6.text")); // NOI18N
        jLabel6.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel6MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel6))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(21, 21, 21)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(10, 10, 10)
                                .addComponent(jLabel4))
                            .addComponent(jLabel1))))
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addContainerGap())
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jButtonSources, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jButtonDest, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 248, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(25, 25, 25))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 167, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jLabelDir, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addComponent(jLabel8)
                            .addComponent(jLabel2))
                        .addGap(0, 0, Short.MAX_VALUE))))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 248, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(25, 25, 25))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jLabel8)
                .addGap(9, 9, 9)
                .addComponent(jLabel1)
                .addGap(4, 4, 4)
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButtonSources)
                .addGap(18, 18, 18)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButtonDest)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(jLabelDir))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton3)
                .addGap(16, 16, 16)
                .addComponent(jLabel7)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel9)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 31, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jLabel6)))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonSourcesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSourcesActionPerformed
	JFileChooser c = new JFileChooser();
	c.setMultiSelectionEnabled(true);
	int res = c.showOpenDialog(this);
	if (res == JFileChooser.APPROVE_OPTION) {
	    files_ = c.getSelectedFiles();
	}

    }//GEN-LAST:event_jButtonSourcesActionPerformed

    private void jButtonDestActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonDestActionPerformed
	JFileChooser c = new JFileChooser();
	c.setMultiSelectionEnabled(false);
	c.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);
	c.setFileFilter(new FileFilter() {
	    @Override
	    public boolean accept(File f) {
		return f.isDirectory();
	    }

	    @Override
	    public String getDescription() {
		return "Répertoire";
	    }
	});
	int res = c.showOpenDialog(this);
	if (res == JFileChooser.APPROVE_OPTION) {
	    destination_ = c.getSelectedFile();
	    LawsAction.changeReferentialDir(destination_);
	    jLabelDir.setText(destination_.getPath());

	}
    }//GEN-LAST:event_jButtonDestActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
	// Exo
	Exodos ex = new Exodos(this.destination_.getPath(), files_);
	SwingUtilities.invokeLater(ex);
	NotifyDescriptor nd = new NotifyDescriptor.Message("Découpage terminé", NotifyDescriptor.Message.PLAIN_MESSAGE);
	DialogDisplayer.getDefault().notify(nd);
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jLabel4MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel4MouseClicked
	if (evt.getClickCount() == 2) {
	    openBrowser(jLabel4.getText().trim());
	}
    }//GEN-LAST:event_jLabel4MouseClicked

    private void jLabel6MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel6MouseClicked
	if (evt.getClickCount() == 2) {
	    openBrowser(jLabel6.getText().trim());
	}
    }//GEN-LAST:event_jLabel6MouseClicked

    private void openBrowser(String url_) {
	String url = url_;
	if (url == null) {
	    url = "www.jsph.fr";
	}
	if (java.awt.Desktop.isDesktopSupported()) {
	    java.awt.Desktop desktop = java.awt.Desktop.getDesktop();
	    if (desktop.isSupported(java.awt.Desktop.Action.BROWSE)) {
		try {
		    java.net.URI uri = new java.net.URI(url);
		    desktop.browse(uri);
		} catch (IOException ex) {
		    Exceptions.printStackTrace(ex);
		} catch (URISyntaxException ex) {
		    Exceptions.printStackTrace(ex);
		}
	    }
	}
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButtonDest;
    private javax.swing.JButton jButtonSources;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JLabel jLabelDir;
    // End of variables declaration//GEN-END:variables

    @Override
    public void componentOpened() {
	// TODO add custom code on component opening
    }

    @Override
    public void componentClosed() {
	// TODO add custom code on component closing
    }

    void writeProperties(java.util.Properties p) {
	// better to version settings since initial version as advocated at
	// http://wiki.apidesign.org/wiki/PropertyFiles
	p.setProperty("version", "1.0");
	// TODO store your settings
    }

    void readProperties(java.util.Properties p) {
	String version = p.getProperty("version");
	// TODO read your settings according to their version
    }

    class Exodos implements Runnable {

	private String destinationDir;
	File[] files;
	private OutputStream out;

	Exodos(String pDir, File[] listFiles) {
	    destinationDir = pDir;
	    files = listFiles;
	}

	private void treatDir() {
	    for (int i = 0; i < files.length; i++) {
		File file = files[i];
		treatFile(file);
	    }

	}

	private void treatFile(File file) {
	    try {

		BufferedReader in = new BufferedReader(new InputStreamReader(
			new FileInputStream(file)));
		String read = in.readLine();
		LineContext ctx = new LineContext();
		ctx.setCode(read.trim());
		int nbEmptYLine =0;
		while (read != null) {
		    if ("".equals(read)) {
			nbEmptYLine++;
		    } 
		    treatLine(file.getName(), read, ctx,nbEmptYLine);
		    
		    read = in.readLine();
		}
		in.close();
		in = null;

	    } catch (Exception e) {
		e.printStackTrace();
	    } finally {
	    }
	}

	
	private boolean exclude(String line){
	    if ("\f".equals(line.trim())){
	      return true;
	    }
	    
	    
	    for (int i = 0; i < STR.length; i++) {
		Pattern p1 = Pattern.compile(STR[i]);
		Matcher m = p1.matcher(line);
		if (m.matches()){return true;}
	    }
	   return false;
	}
	
	private void treatLine(String source, String read, LineContext ctx, int nbEmptYLine) throws Exception {
            if (exclude(read)) return;
	    
	    String cd = ctx.getCode();
	    String kStr = null;
	    if (cd.startsWith("Charte")){
		//Charte europenne
		kStr = "Article \\d+ – ";
	    } else {
		//Lois françaises
		kStr = "(Article.+)";
	    }
	    Pattern pattern = Pattern.compile(kStr);
	    Matcher matcher = pattern.matcher(read);
	    if (matcher.matches()) {
		String art = matcher.group(1).trim();
		int idxart = art.indexOf("Article");
		if (idxart > 0){
		  art = art.substring(idxart+"Article".length());
		}
		if (out != null) {
		    out.write("</art>\n".getBytes());
		    out.close();
		}
		ctx.setCurrent(art);
		File dir2 = new File(destinationDir + "/" + source);
		if (!dir2.exists()) {
		    dir2.mkdirs();
		    LIST.add(dir2.getPath());
		}
		File fff = new File(destinationDir + "/" + source + "/" + art + ".txt");
		out = new FileOutputStream(fff);
		out.write(("<code>"+ctx.getCode()+"</code><art><n>" + art + "</n>\n").getBytes());
	    } else {
		if (out != null) {
		    out.write((read + "\n").getBytes());
		}

	    }

	}

	@Override
	public void run() {
	    treatDir();
	}
    }

    public static File getDestination_() {
	return destination_;
    }
}
