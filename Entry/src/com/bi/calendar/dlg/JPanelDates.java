/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package com.bi.calendar.dlg;

import com.bi.calendar.CalendarPopupModel;
import com.bi.calendar.D;
import com.bi.calendar.Dr;
import com.bi.calendar.MonthLstnr;
import com.bi.calendar.MonthModel;
import com.bi.calendar.YearLstnr;
import com.bi.calendar.YearModel;
import java.awt.Dimension;
import java.awt.event.ItemListener;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.Date;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import javax.swing.JFormattedTextField;
import org.openide.DialogDisplayer;
import org.openide.NotifyDescriptor;
import org.openide.util.Exceptions;

/**
 *
 * @author rafaralahitsimba tiaray
 */
public class JPanelDates extends javax.swing.JPanel {

    private JFormattedTextField target;
    private boolean useHour = false;

    /**
     * Creates new form JPanelDates
     */
    public JPanelDates() {
	initComponents();
    }

    public JPanelDates(JFormattedTextField target) {
	this(target, false);
    }

    public JPanelDates(JFormattedTextField target, boolean hour) {
	this.target = target;
	this.useHour = hour;
	initComponents();
    }

    private Calendar extractSellectedDate(JFormattedTextField target) {
	// TODO Auto-generated method stub
	String txt = target.getText();
	Pattern pattern = Pattern.compile("\\d\\d.\\d\\d.\\d\\d\\d\\d [\\d\\d:\\d\\d]");
	Matcher m = pattern.matcher(txt);
	Calendar cal = Calendar.getInstance();
	if (txt != null && !"".equals(txt.trim()) && m.matches()) {
	    try {
		if (useHour) {
		    SimpleDateFormat f = new SimpleDateFormat("dd/MM/yyyy HH:mm");
		    Date d = f.parse(txt);
		    cal.setTime(d);
		} else {
		    SimpleDateFormat f = new SimpleDateFormat("dd/MM/yyyy");
		    Date d = f.parse(txt);
		    cal.setTime(d);
		}


	    } catch (ParseException ex) {
		Exceptions.printStackTrace(ex);
	    }

	}
	return cal;
    }

    void fillDate() {
	int row = jTable1.getSelectedRow();
	int col = jTable1.getSelectedColumn();
	if (row < 0 || col < 0) {
	    NotifyDescriptor nd = new NotifyDescriptor.Message("Pas de sÃ©lection");
	    DialogDisplayer.getDefault().notify(nd);
	} else {
	    CalendarPopupModel pop = (CalendarPopupModel) jTable1.getModel();

	    D selected = (D) pop.getValueAt(row, col);


	    String resulr = selected.getSelectedDay() + "/" + (selected.getSeletedMonth() + 1) + "/" + selected.getSelectedYear();
	    if (useHour) {
		resulr += " "+selected.getSelectedHour();
	    }
	    target.setText(resulr);

	}
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        Dimension ddd = new Dimension(400, 400);
        jTable1 = new javax.swing.JTable();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jcombomonth = new javax.swing.JComboBox();
        jLabel2 = new javax.swing.JLabel();
        jcomboyearth = new javax.swing.JComboBox();

        setLayout(new java.awt.BorderLayout());

        CalendarPopupModel model = new CalendarPopupModel();
        jTable1.setModel(model);
        jScrollPane1.setViewportView(jTable1);
        ItemListener yearitemlstnr = new YearLstnr(model);
        jcomboyearth.addItemListener(yearitemlstnr);
        ItemListener monthItemstnr = new MonthLstnr(model);
        jcombomonth.addItemListener(monthItemstnr);
        Calendar cal = extractSellectedDate(target);
        int selectedMonth = cal.get(Calendar.MONTH) ;
        int selectedYear = cal.get(Calendar.YEAR);
        jcombomonth.setSelectedItem(""+selectedMonth);
        jcomboyearth.setSelectedItem(""+selectedYear);
        Dr d = new Dr();
        d.setMonthComponent(jcombomonth);
        d.setYearComponent(jcomboyearth);
        d.setSelectedDay(cal);
        jTable1.setDefaultRenderer(D.class,d );

        jTable1.setSize(ddd);
        jTable1.setRowHeight(40);

        add(jScrollPane1, java.awt.BorderLayout.CENTER);
        jScrollPane1.setPreferredSize(ddd);
        jScrollPane1.getViewport().setSize(ddd);

        org.openide.awt.Mnemonics.setLocalizedText(jLabel1, org.openide.util.NbBundle.getMessage(JPanelDates.class, "JPanelDates.jLabel1.text")); // NOI18N

        jcombomonth.setMaximumRowCount(12);
        jcombomonth.setModel(new MonthModel());
        jcombomonth.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        org.openide.awt.Mnemonics.setLocalizedText(jLabel2, org.openide.util.NbBundle.getMessage(JPanelDates.class, "JPanelDates.jLabel2.text")); // NOI18N

        jcomboyearth.setModel(new YearModel());

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jcombomonth, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(5, 5, 5)
                .addComponent(jLabel2)
                .addGap(5, 5, 5)
                .addComponent(jcomboyearth, 0, 167, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(5, 5, 5)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jcombomonth, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1)))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(8, 8, 8)
                .addComponent(jLabel2))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(5, 5, 5)
                .addComponent(jcomboyearth, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        add(jPanel1, java.awt.BorderLayout.NORTH);
    }// </editor-fold>//GEN-END:initComponents
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JComboBox jcombomonth;
    private javax.swing.JComboBox jcomboyearth;
    // End of variables declaration//GEN-END:variables

    
}
